services:

## ---------------- GO
  # credit-api:
  #   image: ${DOCKER_REGISTRY-}go-credit-api
  #   build:
  #     context: src\go\credit-api
  #   ports:
  #     - 8081:8081
  # credit-api-dapr:
  #   image: daprio/daprd:edge
  #   command: ["./daprd",
  #    "-app-id", "credit-api",
  #    "-app-port", "8081",
  #    "-components-path", "./components"]   
  #   volumes:
  #     - "./dapr/docker-components/:/components"
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #     credit-api:
  #       condition: service_started
  #   network_mode: "service:credit-api"

  # booking-processor-1:
  #   image: ${DOCKER_REGISTRY-}go-booking-processor
  #   build:
  #     context: src\go\booking-processor
  # booking-processor-dapr-1:
  #   image: daprio/daprd:edge
  #   command: ["./daprd",
  #    "-app-id", "booking-processor",
  #    "-app-port", "8080",
  #    "-components-path", "./components"]   
  #   volumes:
  #     - "./dapr/docker-components/:/components"
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #     booking-processor-1:
  #       condition: service_started
  #   network_mode: "service:booking-processor-1"

  # booking-processor-2:
  #   image: ${DOCKER_REGISTRY-}go-booking-processor
  #   build:
  #     context: src\go\booking-processor
  # booking-processor-dapr-2:
  #   image: daprio/daprd:edge
  #   command: ["./daprd",
  #    "-app-id", "booking-processor",
  #    "-app-port", "8080",
  #    "-components-path", "./components"]   
  #   volumes:
  #     - "./dapr/docker-components/:/components"
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
  #     booking-processor-2:
  #       condition: service_started
  #   network_mode: "service:booking-processor-2"

## ---------------- .NET
  credit-api:
    image: ${DOCKER_REGISTRY-}dotnet-credit-api
    build:
      context: src\dotnet\credit-api
    ports:
      - 5010:80
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'
  credit-api-dapr:
    image: daprio/daprd:1.10.7
    command: ["./daprd",
     "-app-id", "credit-api",
     "-app-port", "80",
     #"--log-level", "debug",
     "-resources-path", "./components",
     "-config", "./components/config.yaml"]   
    volumes:
      - "./dapr/docker-components/:/components"
    depends_on:
      kafka:
        condition: service_healthy
      otel-collector:
        condition: service_started
      credit-api:
        condition: service_started
    network_mode: "service:credit-api"

  booking-processor-1:
    image: ${DOCKER_REGISTRY-}dotnet-booking-processor
    build:
      context: src\dotnet\booking-processor
    ports:
      - 5011:80
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'
  booking-processor-dapr-1:
    image: daprio/daprd:1.10.7
    command: ["./daprd",
     "-app-id", "booking-processor",
     "-app-port", "80",
     #"--log-level", "debug",
     "-resources-path", "./components",
     "-config", "./components/config.yaml"]   
    volumes:
      - "./dapr/docker-components/:/components"
    depends_on:
      kafka:
        condition: service_healthy
      otel-collector:
        condition: service_started
      booking-processor-1:
        condition: service_started
    network_mode: "service:booking-processor-1"

  booking-processor-2:
    image: ${DOCKER_REGISTRY-}dotnet-booking-processor
    build:
      context: src\dotnet\booking-processor
    ports:
      - 5012:80
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: 'http://otel-collector:4317'
  booking-processor-dapr-2:
    image: daprio/daprd:1.10.7
    command: ["./daprd",
     "-app-id", "booking-processor",
     "-app-port", "80",
     #"--log-level", "debug",
     "-resources-path", "./components",
     "-config", "./components/config.yaml"]   
    volumes:
      - "./dapr/docker-components/:/components"
    depends_on:
      kafka:
        condition: service_healthy
      otel-collector:
        condition: service_started
      booking-processor-2:
        condition: service_started
    network_mode: "service:booking-processor-2"

  interest-rate-api:
    image: ${DOCKER_REGISTRY-}go-interest-rate-api
    build:
      context: src\go\interest-rate-api
    environment:
      SERVICE_NAME: interest-rate-api
      OTEL_EXPORTER_OTLP_ENDPOINT: 'otel-collector:4317'
      INSECURE_MODE: true
  interest-rate-api-dapr:
    image: daprio/daprd:1.10.7
    command: ["./daprd",
     "-app-id", "interest-rate-api",
     "-app-port", "80",
     "-resources-path", "./components"]   
    volumes:
      - "./dapr/docker-components/:/components"
    depends_on:
      interest-rate-api:
        condition: service_started
      otel-collector:
        condition: service_started
    network_mode: "service:interest-rate-api"

## ----------------- Infra

  redis:
    image: redis:latest
    ports:
      - 6380:6379

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 30
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 2s
      timeout: 2s
      retries: 15
      
  kafka-exporter:
    image: bitnami/kafka-exporter:1.6.0
    restart: unless-stopped
    command: --kafka.server=kafka:29092 --zookeeper.server=zookeeper:2181 #--log.enable-sarama #--concurrent.enable #--verbosity=2
    depends_on:
      kafka:
        condition: service_healthy
  
  kafka-drop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms32M -Xmx64M"

  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - 9412:9411
    environment:
      JAVA_OPTS: '-Xms1g -Xmx1g -XX:+ExitOnOutOfMemoryError'

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.75.0
    command: ["--config=conf/config.yaml"]
    environment:
      - APPLICATION_INSIGHTS_INSTRUMENTATION_KEY=${APPLICATION_INSIGHTS_INSTRUMENTATION_KEY}
    volumes:
      - ./docker/otel-collector-config.yaml:/conf/config.yaml

  otel-prom-remote-write:
    image: mcr.microsoft.com/azuremonitor/prometheus/promdev/prom-remotewrite:prom-remotewrite-20221103.1
    environment:
      INGESTION_URL: ${AZURE_MONITOR_INGESTION_URL}
      LISTENING_PORT: 8081
      IDENTITY_TYPE: aadApplication
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_CERTIFICATE_PATH: /certs/pfxcert.pfx
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      CLUSTER: 'ACA'
    volumes:
      - ./certs/pfxcert.pfx:/certs/pfxcert.pfx

  seq:
    image: datalust/seq:latest
    ports:
      - 5341:80
    environment:
      - ACCEPT_EULA=Y
